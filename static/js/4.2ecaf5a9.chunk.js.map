{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","path","id","dialog","active","to","name","maxLength500","MaxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","formModule","textModule","Field","component","TextArea","placeholder","validate","required","buttons","Dialogs","state","dialogsPage","dialogsElement","dialogs","map","d","key","messagesElement","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageText","compose","connect","dispatch","addMessageCreator","WithAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,QAAU,yBAAyB,WAAa,8B,uFCgBrRC,EAbC,SAACC,GAIb,OACI,6BACI,yBAAKC,UAAWC,IAAEC,SAAUH,EAAMG,W,QCK/BC,EAXI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACI,yBAAKL,UAAWC,IAAEK,OAAS,IAAML,IAAEM,QAC/B,kBAAC,IAAD,CAASC,GAAIJ,GAAOL,EAAMU,Q,yCCEhCC,EAAeC,YAAiB,KA4ChCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,aAAchB,UAAWC,IAAEgB,YAC7C,yBAAKjB,UAAWC,IAAEiB,YACd,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAM,iBAAkBa,YAAa,qBACjEC,SAAU,CAACC,IAASd,MAExB,6BAAK,4BAAQV,UAAWC,IAAEwB,SAArB,QAAL,SAOGC,EA7CC,SAAC3B,GACb,IAAI4B,EAAQ5B,EAAM6B,YAGdC,EAAiBF,EAAMG,QAAQC,KAC/B,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMwB,IAAKD,EAAE3B,GAAIA,GAAI2B,EAAE3B,QAGhD6B,EAAkBP,EAAMQ,SAASJ,KACjC,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASlC,QAASkC,EAAElC,QAAS+B,IAAKG,EAAE/B,QAM7C,OAAIN,EAAMsC,OAIN,yBAAKrC,UAAWC,IAAE6B,SACd,yBAAK9B,UAAWC,IAAEqC,cACbT,GAEL,yBAAK7B,UAAWC,IAAEkC,UACd,6BAAMD,IAEV,kBAACtB,EAAD,CAAqBG,SAdX,SAACwB,GACfxC,EAAMyC,YAAYD,EAAOE,oBAGlB,kBAAC,IAAD,CAAUjC,GAAI,Y,uBCNdkC,sBACXC,aAfkB,SAAChB,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAGF,SAACgB,GACtB,MAAM,CACFJ,YAAc,SAACC,GACXG,EAASC,YAAkBJ,SAQnCK,IAFWJ,CAGbhB","file":"static/js/4.2ecaf5a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2QRWK\",\"dialogsItems\":\"Dialogs_dialogsItems__13PJH\",\"active\":\"Dialogs_active__1IjUf\",\"messages\":\"Dialogs_messages__VElQw\",\"message\":\"Dialogs_message__qy5J4\",\"buttonPart\":\"Dialogs_buttonPart__2lyWi\",\"buttons\":\"Dialogs_buttons__1DXGW\",\"textModule\":\"Dialogs_textModule__3I9bN\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControls/FormsControls\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst maxLength500 = MaxLengthCreator(500);\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n\r\n    let dialogsElement = state.dialogs.map(\r\n        d => <DialogItem name={d.name} key={d.id} id={d.id} />\r\n    );\r\n\r\n    let messagesElement = state.messages.map(\r\n        m => <Message message={m.message} key={m.id}/>\r\n    );\r\n\r\n    let addNewMessage=(values)=>{\r\n        props.sendMessage(values.newMessageText);\r\n    }\r\n    if(!props.isAuth){\r\n        return <Redirect to={'/login'} />\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.formModule}>\r\n            <div className={s.textModule}>\r\n                <Field component={TextArea} name={'newMessageText'} placeholder={'Enter your message'}\r\n                validate={[required,maxLength500]}></Field>\r\n            </div>\r\n            <div><button className={s.buttons}>Send</button> </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {addMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage : (newMessageText) => {\r\n            dispatch(addMessageCreator(newMessageText));\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}