{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","path","id","dialog","activeClassName","active","to","name","maxLength500","MaxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","formModule","textModule","Field","textarea","component","TextArea","placeholder","validate","required","buttons","Dialogs","state","dialogsPage","dialogsElement","dialogs","map","d","key","messagesElement","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageText","compose","connect","dispatch","addMessageCreator","WithAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,QAAU,yBAAyB,WAAa,4BAA4B,SAAW,4B,uFCY7VC,EATC,SAACC,GACf,OACE,6BACE,yBAAKC,UAAWC,IAAEC,SAAUH,EAAMG,W,QCOzBC,EAVI,SAACJ,GAClB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACE,yBAAKL,UAAWC,IAAEK,QAChB,kBAAC,IAAD,CAASC,gBAAiBN,IAAEO,OAAQC,GAAIL,GAAOL,EAAMW,Q,yCCCrDC,EAAeC,YAAiB,KA6ChCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAACf,GACpB,OACI,0BAAMiB,SAAUjB,EAAMkB,aAAcjB,UAAWC,IAAEiB,YAC7C,yBAAKlB,UAAWC,IAAEkB,YACd,kBAACC,EAAA,EAAD,CAAOpB,UAAWC,IAAEoB,SAAUC,UAAWC,IAAUb,KAAM,iBAAkBc,YAAa,qBACxFC,SAAU,CAACC,IAASf,MAExB,6BAAK,4BAAQX,UAAWC,IAAE0B,SAArB,QAAL,SAOGC,EA7CC,SAAC7B,GACb,IAAI8B,EAAQ9B,EAAM+B,YAEdC,EAAiBF,EAAMG,QAAQC,KAC/B,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMyB,IAAKD,EAAE7B,GAAIA,GAAI6B,EAAE7B,QAGhD+B,EAAkBP,EAAMQ,SAASJ,KACjC,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASpC,QAASoC,EAAEpC,QAASiC,IAAKG,EAAEjC,QAM7C,OAAIN,EAAMwC,OAKN,yBAAKvC,UAAWC,IAAE+B,SACd,yBAAKhC,UAAWC,IAAEuC,cACbT,GAEL,yBAAK/B,UAAWC,IAAEoC,UACd,6BAAMD,GACR,kBAACvB,EAAD,CAAqBG,SAdb,SAACyB,GACf1C,EAAM2C,YAAYD,EAAOE,qBAGlB,kBAAC,IAAD,CAAUlC,GAAI,Y,uBCLdmC,sBACXC,aAfkB,SAAChB,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAGF,SAACgB,GACtB,MAAM,CACFJ,YAAc,SAACC,GACXG,EAASC,YAAkBJ,SAQnCK,IAFWJ,CAGbhB","file":"static/js/4.a249e0b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2QRWK\",\"dialogsItems\":\"Dialogs_dialogsItems__13PJH\",\"dialog\":\"Dialogs_dialog__3BnQ7\",\"active\":\"Dialogs_active__1IjUf\",\"messages\":\"Dialogs_messages__VElQw\",\"message\":\"Dialogs_message__qy5J4\",\"buttonPart\":\"Dialogs_buttonPart__2lyWi\",\"buttons\":\"Dialogs_buttons__1DXGW\",\"textModule\":\"Dialogs_textModule__3I9bN\",\"textarea\":\"Dialogs_textarea__PGCgo\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.message}>{props.message}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink activeClassName={s.active} to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControls/FormsControls\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength500 = MaxLengthCreator(500);\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map(\r\n        d => <DialogItem name={d.name} key={d.id} id={d.id} />\r\n    );\r\n\r\n    let messagesElement = state.messages.map(\r\n        m => <Message message={m.message} key={m.id}/>\r\n    );\r\n\r\n    let addNewMessage=(values)=>{\r\n        props.sendMessage(values.newMessageText);\r\n    }\r\n    if(!props.isAuth){\r\n        return <Redirect to={'/login'} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n              <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.formModule}>\r\n            <div className={s.textModule}>\r\n                <Field className={s.textarea} component={TextArea} name={'newMessageText'} placeholder={'Enter your message'}\r\n                validate={[required,maxLength500]}></Field>\r\n            </div>\r\n            <div><button className={s.buttons}>Send</button> </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {addMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage : (newMessageText) => {\r\n            dispatch(addMessageCreator(newMessageText));\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}