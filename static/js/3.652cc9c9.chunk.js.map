{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileConteiner.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setstatuse","useEffect","className","s","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormRedux","reduxForm","form","handleSubmit","profile","error","onSubmit","style","formSummaryError","formDataModule","createField","Input","type","TextArea","Object","keys","contacts","map","key","contact","onClick","buttons","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","photo","src","photos","large","userPhoto","mainPhoto","wrapperMainPhoto","inputWrapper","editPhoto","id","target","files","length","htmlFor","selectPhoto","desc","initialValues","formData","then","Post","item","wrapper","message","likes","like","maxLength10","MaxLengthCreator","MyPosts","nextProps","nextState","nextContext","this","state","postsElements","posts","reverse","p","post","likesCount","postsBlock","title","AddPostFormRedux","values","addPost","newPostText","Component","blockAddPost","postsTitles","Field","areaAddPost","component","name","placeholder","validate","required","addPostButton","MyPostsContainer","connect","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","React","compose","auth","isAuth","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/3.652cc9c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__P2rHY\",\"photo\":\"ProfileInfo_photo__nDr3q\",\"status\":\"ProfileInfo_status__2vjlB\",\"wrapperMainPhoto\":\"ProfileInfo_wrapperMainPhoto__QxWS-\",\"desc\":\"ProfileInfo_desc__ey_gQ\",\"profileImg\":\"ProfileInfo_profileImg__2k_4c\",\"mainPhoto\":\"ProfileInfo_mainPhoto__UMRhx\",\"contact\":\"ProfileInfo_contact__1RHit\",\"formDataModule\":\"ProfileInfo_formDataModule__3uZj_\",\"buttons\":\"ProfileInfo_buttons__UPWcO\",\"editPhoto\":\"ProfileInfo_editPhoto__1Sxgu\",\"selectPhoto\":\"ProfileInfo_selectPhoto__3NdUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__12lQ2\",\"posts\":\"MyPosts_posts__1ffE9\",\"title\":\"MyPosts_title__1oT_J\",\"blockAddPost\":\"MyPosts_blockAddPost__3lJ7-\",\"postsTitles\":\"MyPosts_postsTitles__O6-7c\",\"addPostButton\":\"MyPosts_addPostButton__4dRWk\",\"areaAddPost\":\"MyPosts_areaAddPost__2W7Dx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1f8PE\",\"message\":\"Post_message__rWcAa\",\"wrapper\":\"Post_wrapper__3cdNy\",\"likes\":\"Post_likes__Rx-xU\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setstatuse] = useState(props.status);\r\n    const activateEditmode =() => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setstatuse(props.status)\r\n    },[props.status]);\r\n    const deactivateEditMode= () => {\r\n            setEditMode(false);\r\n            props.updateStatus(status);\r\n        };\r\n    const onStatusChange = (e) => {\r\n        setstatuse( e.currentTarget.value);\r\n    };\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <b className={s.status}>Status:</b><span onDoubleClick={activateEditmode}>{props.status || 'No status'}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true}\r\n                               onBlur={deactivateEditMode} value={status}></input>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControl.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return  <form onSubmit={handleSubmit}>\r\n    <div>\r\n    {error && <div className={style.formSummaryError}> {error}</div>}\r\n    </div>\r\n    <div className={s.formDataModule}>\r\n        <div>\r\n            <b>Full Name:</b> {createField('Full name','fullName',[], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking For a job:</b>\r\n            {createField('','lookingForAJob',[], Input, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My skills:</b>\r\n            {createField('My skills','lookingForAJobDescription',[], TextArea)}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b>\r\n            {createField('About me','aboutMe',[], TextArea)}\r\n        </div>\r\n        {<div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key =>{\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key} :</b> {createField(key,'contacts.' + key,[], TextArea)}\r\n            </div>\r\n\r\n        })}\r\n        </div>}\r\n\r\n    </div>\r\n        <button onClick={() => {}} className={s.buttons}>Save</button>\r\n    </form>\r\n\r\n};\r\nconst ProfileDataFormRedux = reduxForm({form: 'edit-form'})(ProfileDataForm);\r\nexport default ProfileDataFormRedux;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/images.jpg';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, savePhoto, isOwner, updateStatus, status, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n\r\n    }\r\n    return (\r\n        <div className={s.descriptionBlock}>\r\n            <div className={s.photo}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                <div className={s.wrapperMainPhoto}>\r\n                    <div className={s.inputWrapper}>\r\n                        {isOwner && <> <input className={s.editPhoto} id=\"selectPhotoProfile\" type={'file'}\r\n                                              onChange={onMainPhotoSelected}/>\r\n                            <label htmlFor=\"selectPhotoProfile\" className={s.selectPhoto}>Change photo</label> </>}\r\n                    </div>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.desc}>\r\n                <div>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData profile={profile}\r\n                                       isOwner={isOwner}\r\n                                       goToEditMode={() => {\r\n                                           setEditMode(true)\r\n                                       }}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        <div className={s.formDataModule}>\r\n            <div>\r\n                <b>Full Name:</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking For a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My skills</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n        {isOwner && <button onClick={goToEditMode} className={s.buttons}>edit</button>}\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}>\r\n        <b>{contactTitle}</b> : {contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.wrapper}>\r\n            <img src='https://d1.awsstatic.com/logos/customers/ifunny-logo.7d6dd876e74aa9d4da4823f9a8b8d79b949bbf1f.png'></img>\r\n            <p className={s.message} >{props.message}</p>\r\n        </div>\r\n                <span className={s.likes}> {props.like} like </span>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, {Component} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { MaxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10= MaxLengthCreator(10);\r\n\r\n\r\n\r\nclass MyPosts extends Component{\r\nshouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    return nextProps != this.props || nextState != this.state\r\n}\r\n    render() {\r\n    let postsElements = [...this.props.posts].reverse().map(\r\n        p => <Post key={p.id} message={p.post} like={p.likesCount} />\r\n    );\r\n\r\n    let addNewPost=(values)=>{\r\n        this.props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2 className={s.title}>My posts:</h2>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n            <div className={s.posts}> {postsElements} </div>\r\n        </div>\r\n    )\r\n}\r\n};\r\n\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.blockAddPost}>\r\n            <div className={s.postsTitles}>\r\n                <Field  className={s.areaAddPost} component={TextArea} name={'newPostText'} placeholder={'Enter your post'}\r\n                validate={[required,maxLength10]}></Field>\r\n            </div>\r\n            <div><button className={s.addPostButton}>Add post</button> </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostFormRedux = reduxForm({form: 'profileAddPostForm'})(AddPostForm);\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         isOwner={props.isOwner}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, savePhoto, updateStatus,saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\nrefreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId){\r\n        userId=this.props.authorizedUserId;\r\n        if(!userId){\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n}\r\n    componentDidMount() {\r\n       this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if(this.props.match.params.userId != prevProps.match.params.userId){\r\n        this.refreshProfile();}\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} isOwner={!this.props.match.params.userId}\r\n             status={this.props.status} savePhoto={this.props.savePhoto}\r\n                        updateStatus={this.props.updateStatus}/>\r\n            }}\r\n\r\nlet mapStateToProps = (state) =>({\r\n\r\n    profile: state.profilePage.profile,\r\n    status:state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n                connect(mapStateToProps,{getUserProfile, getUserStatus, updateStatus,savePhoto,saveProfile}),\r\n                withRouter,\r\n               WithAuthRedirect\r\n            )(ProfileContainer);\r\n\r\n"],"sourceRoot":""}