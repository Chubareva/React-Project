{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileConteiner.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setstatuse","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormRedux","reduxForm","form","handleSubmit","profile","error","console","log","onSubmit","onClick","className","style","formSummaryError","createField","Input","type","TextArea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","like","maxLength10","MaxLengthCreator","MyPosts","nextProps","nextState","nextContext","this","state","postsElements","posts","reverse","p","id","post","likesCount","postsBlock","AddPostFormRedux","values","addPost","newPostText","Component","Field","component","name","placeholder","validate","required","MyPostsContainer","connect","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","React","compose","auth","isAuth","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/3.295372e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__P2rHY\",\"profileImg\":\"ProfileInfo_profileImg__2k_4c\",\"mainPhoto\":\"ProfileInfo_mainPhoto__UMRhx\",\"contact\":\"ProfileInfo_contact__1RHit\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__12lQ2\",\"posts\":\"MyPosts_posts__1ffE9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1f8PE\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setstatuse] = useState(props.status);\r\n    const activateEditmode =() => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setstatuse(props.status)\r\n    },[props.status]);\r\n    const deactivateEditMode= () => {\r\n            setEditMode(false);\r\n            props.updateStatus(status);\r\n        };\r\n    const onStatusChange = (e) => {\r\n        setstatuse( e.currentTarget.value);\r\n    };\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <b>Status:</b><span onDoubleClick={activateEditmode}>{props.status || 'No status'}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true}\r\n                               onBlur={deactivateEditMode} value={status}></input>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControl.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    console.log(profile.error)\r\n\r\n    return  <form onSubmit={handleSubmit}>\r\n         <button onClick={() => {}}>Save</button>\r\n    <div>\r\n    {error && <div className={style.formSummaryError}> {error}</div>}\r\n    </div>\r\n    <div>\r\n        <div>\r\n            <b>Full Name:</b> {createField('Full name','fullName',[], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking For a job:</b>\r\n            {createField('','lookingForAJob',[], Input, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My skills:</b>\r\n            {createField('My skills','lookingForAJobDescription',[], TextArea)}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b>\r\n            {createField('About me','aboutMe',[], TextArea)}\r\n        </div>\r\n        {<div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key =>{\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key} :</b> {createField(key,'contacts.' + key,[], TextArea)}\r\n            </div>\r\n\r\n        })}\r\n        </div>}\r\n    </div>\r\n\r\n    </form>\r\n\r\n};\r\nconst ProfileDataFormRedux = reduxForm({form: 'edit-form'})(ProfileDataForm);\r\nexport default ProfileDataFormRedux;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/images.jpg';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, savePhoto, isOwner,updateStatus,status, saveProfile }) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    if(!profile){\r\n        return <Preloader />\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile}\r\n                                   isOwner={isOwner}\r\n                                   goToEditMode={() => {setEditMode(true)}}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = ({profile,isOwner, goToEditMode}) => {\r\n  return  <div>\r\n      {isOwner && <button onClick={goToEditMode}>edit</button>}\r\n        <div>\r\n            <b>Full Name:</b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking For a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My skills</b> {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key =>{\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}>\r\n        <b>{contactTitle}</b> : {contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://d1.awsstatic.com/logos/customers/ifunny-logo.7d6dd876e74aa9d4da4823f9a8b8d79b949bbf1f.png'></img>\r\n            {props.message}\r\n                <div>\r\n                <span>like \r\n                </span>\r\n                {props.like}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, {Component} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { MaxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10= MaxLengthCreator(10);\r\n\r\n\r\n\r\nclass MyPosts extends Component{\r\nshouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    return nextProps != this.props || nextState != this.state\r\n}\r\n\r\n    render() {\r\n    let postsElements = [...this.props.posts].reverse().map(\r\n        p => <Post key={p.id} message={p.post} like={p.likesCount} />\r\n    );\r\n\r\n    let addNewPost=(values)=>{\r\n        this.props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n        </div>\r\n    )\r\n}\r\n};\r\n\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name={'newPostText'} placeholder={'Enter your post'}\r\n                validate={[required,maxLength10]}></Field>\r\n            </div>\r\n            <div><button>Add post</button> </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostFormRedux = reduxForm({form: 'profileAddPostForm'})(AddPostForm);\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         isOwner={props.isOwner}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, savePhoto, updateStatus,saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\nrefreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId){\r\n        userId=this.props.authorizedUserId;\r\n        if(!userId){\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n}\r\n    componentDidMount() {\r\n       this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if(this.props.match.params.userId != prevProps.match.params.userId){\r\n        this.refreshProfile();}\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} isOwner={!this.props.match.params.userId}\r\n             status={this.props.status} savePhoto={this.props.savePhoto}\r\n                        updateStatus={this.props.updateStatus}/>\r\n            }}\r\n\r\nlet mapStateToProps = (state) =>({\r\n\r\n    profile: state.profilePage.profile,\r\n    status:state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n                connect(mapStateToProps,{getUserProfile, getUserStatus, updateStatus,savePhoto,saveProfile}),\r\n                withRouter,\r\n               WithAuthRedirect\r\n            )(ProfileContainer);\r\n\r\n"],"sourceRoot":""}